---
import Base from "../../layouts/Base.astro";
import { getCollection } from "astro:content";
import ProjectLinks from "../../components/ProjectLinks.astro";

export async function getStaticPaths() {
  const entries = await getCollection("projects");
  return entries.map((p) => ({ params: { slug: p.slug }, props: { project: p } }));
}

const { project } = Astro.props;
const { data } = project;
const { Content } = await project.render();
---

<Base title={`${data.title} â€” Project`} description={data.description}>
  <article class="mx-auto max-w-3xl">
    <header class="mb-6">
    <h1 class="text-3xl font-bold flex items-center gap-2">
      <img src={`/projects/${project.slug}/icon.png`} alt="" class="size-6 rounded" />
      {data.title}
    </h1> 
    <p class="mt-2 opacity-90">{data.description}</p>

      <div class="mt-3 flex flex-wrap items-center gap-3 text-sm opacity-80">
        {data.date && <span>{data.date}</span>}
        {data.tags && data.tags.map((t) => <span class="px-2 py-0.5 rounded-full border">{t}</span>)}
      </div>

      <!-- Actions -->
      <div class="mt-4">
        <ProjectLinks demo={data.demo} repo={data.repo} />
      </div>
    </header>

    {data.cover && (
      <figure class="rounded-2xl border mb-6 overflow-hidden">
        <div class="aspect-[21/9]">  {/* try 16/9, 2/1, or 21/9 */}
          <img
            src={data.cover.startsWith('/') ? data.cover : `/${data.cover}`}
            alt={data.title}
            class="w-full h-full object-cover"
            loading="lazy" decoding="async"
          />
        </div>
      </figure>
    )}

	<section class="markdown">
      <Content />
    </section>

    {data.stack && (
      <section class="mt-8">
        <h2 class="text-lg font-semibold mb-2">Stack</h2>
        <div class="flex flex-wrap gap-2">
          {data.stack.map((s) => <span class="text-xs px-2 py-1 rounded-full border">{s}</span>)}
        </div>
      </section>
    )}
  </article>
</Base>

